delimiters "<", ">"
import "io/protostuff/generator/core.stg"
import "io/protostuff/generator/java/generator.stg"

enum_compiler_enabled(enum) ::= <%
<if(enum.nested)>
false
<else>
true
<endif>
%>

enum_compiler_output(enum) ::= "<enum.proto.javaPackagePath>/<enum.javaName>.java"
enum_compiler_template(enum) ::= "<enum:enum()>"

enum(enum) ::= <<
package <enum.proto.javaPackage>;

<imports_generator_annotation()>

<enum:enum_body()>
>>

enum_body(enum) ::= <<
<if(!enum.nested)><enum:generator_annotation()><endif>
public enum <enum.javaName> implements io.protostuff.EnumLite\<<enum.javaName>\>{
    <enum.constants:enum_constant(); separator=",\n">;

    private int value;

    private <enum.javaName>(int n) {
        this.value = n;
    }

    @Override
    public int getNumber() {
        return value;
    }

    public static final <enum.javaName> valueOf(int tag) {
        switch(tag) {
            <enum.constants:{constant|case <constant.value>: return <constant.javaName>;}; separator="\n">
            default: return <first(enum.constants).javaName>;
        }
    }
}
>>

enum_constant(constant) ::= <<
<constant.javaName>(<constant.value>)
>>

enum_default_value(enum) ::= <%
<first(enum.constants):enum_constant()>
%>