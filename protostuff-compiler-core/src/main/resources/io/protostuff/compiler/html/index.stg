delimiters "%", "%"
import "io/protostuff/compiler/core.stg"
import "io/protostuff/compiler/html/common.stg"
import "io/protostuff/compiler/html/header.stg"
import "io/protostuff/compiler/html/navbar.stg"
import "io/protostuff/compiler/html/footer.stg"

module_compiler_enabled(module) ::= "true"
module_compiler_output(module) ::= "index.html"

module_compiler_template(module) ::= <<
%module:index()%
>>

index(module) ::= <<
%header()%
%navbar()%

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-4 col-md-3 sidebar">
            <div id="tree"></div>
        </div>
        <div id="content" class="col-sm-8 col-sm-offset-4 col-md-9 col-md-offset-3 main">
        </div>
    </div>
</div>

<script>        
    function getTree() {
        var tree = [
            %module.protos:proto(); separator=",\n"%
        ];
        return tree;
    }
</script>

<script src="js/main.js"></script>

%footer()%
>>

proto(proto) ::= <<
{
    text: "%proto.name%.proto",
    nodes: [
        %proto:links()%
    ]
}
>>


links(container) ::= <<
%container.messages:message_link(); separator=",\n"%
%if(first(container.messages) && first(container.enums))%,%endif%
%container.enums:enum_link(); separator=",\n"%
>>

message_link(message) ::= <<
{
    text: "%message.name%",
    href: "%message:type_href()%"%if(first(message.messages) || first(message.enums))%,    
    nodes: [
        %message:links()%   
    ]%endif%    
}
>>

enum_link(enum) ::= <<
{
    text: "%enum.name%",
    href: "%enum:type_href()%"
}
>>

message_icon() ::= <<

>>

enum_icon() ::= <<

>>