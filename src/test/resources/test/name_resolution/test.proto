syntax = "proto3";

package test.name_resolution;

option java_package = "io.protostuff.parser";

// Type name resolution in the protocol buffer language works like C++: first
// the innermost scope is searched, then the next-innermost, and so on, with
// each package considered to be "inner" to its parent package. A leading '.'
// (for example, .foo.bar.Baz) means to start from the outermost scope instead.

message B {
    int32 x = 1;

    message C {
        int32 y = 1;
    }
}

message A {
    int32 x = 1;

    // fully-qualified name
    .test.name_resolution.A.B.C c0 = 10;

    // all following names are also valid
    test.name_resolution.A.B.C c1 = 11;
    name_resolution.A.B.C c2 = 12;
    A.B.C c3 = 13;
    B.C c4 = 14;

    message B {
        int32 y = 1;

        message C {
            int32 z = 1;
        }
    }
}


